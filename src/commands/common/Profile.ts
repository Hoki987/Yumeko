import { ActionRowBuilder, AnyComponentBuilder, ApplicationCommandType, AttachmentBuilder, ButtonBuilder, ButtonStyle, Collection } from "discord.js";
import { Command } from "../../structs/types/Command";

export default new Command({
    name: "profile",
    description: "Show your profile",
    type: ApplicationCommandType.ChatInput,
    async run({ interaction }) {
        const components = [new ActionRowBuilder<ButtonBuilder>().addComponents(
            new ButtonBuilder()
                .setCustomId("profile_Inventory")
                .setLabel("–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å")
                .setEmoji("üíº")
                .setStyle(ButtonStyle.Secondary),
            new ButtonBuilder()
                .setCustomId("profile_Stats")
                .setLabel("–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏")
                .setEmoji("üìà")
                .setStyle(ButtonStyle.Secondary),
            new ButtonBuilder()
                .setCustomId("profile_Job")
                .setLabel("–†–∞–±–æ—Ç–∞")
                .setEmoji("üß§")
                .setStyle(ButtonStyle.Secondary),
            new ButtonBuilder()
                .setCustomId("profile_duels")
                .setLabel("–°—Ä–∞–∂–µ–Ω–∏—è")
                .setEmoji("‚öî")
                .setStyle(ButtonStyle.Danger)
        )]
        await interaction.deferReply()

        await interaction.editReply({
            files: [new AttachmentBuilder("https://cdn.discordapp.com/attachments/1185491430588813312/1188390604028248104/1.png?ex=659a59ff&is=6587e4ff&hm=62403beea5af21863a906a78be181b081605765d18b12c0f19f28b42e4e30928&")], components: components
        })
    },
    buttons: new Collection([
        ["backProfile", async (interaction) => {
            await interaction.update({

            })
        }],
        ["profile", async (interaction) => {
            const [, type] = interaction.customId.split("_")
            let component;
            let content: string = "";
            switch (type) {
                case "Inventory":
                    content = "–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å"
                    component = [new ActionRowBuilder<ButtonBuilder>().addComponents(
                        new ButtonBuilder()
                            .setCustomId("backProfile")
                            .setLabel("–û–±—Ä–∞—Ç–Ω–æ –≤ –ø—Ä–æ—Ñ–∏–ª—å")
                            .setStyle(ButtonStyle.Secondary)
                    )]
                    break;
                case "Stats":
                    content = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
                    component = [new ActionRowBuilder<ButtonBuilder>().addComponents(
                        new ButtonBuilder()
                            .setCustomId("backProfile")
                            .setLabel("–û–±—Ä–∞—Ç–Ω–æ –≤ –ø—Ä–æ—Ñ–∏–ª—å")
                            .setStyle(ButtonStyle.Secondary)
                    )]
                    break;
                case "Job":
                    content = "–†–∞–±–æ—Ç–∞"
                    component = [new ActionRowBuilder<ButtonBuilder>().addComponents(
                        new ButtonBuilder()
                            .setCustomId("backProfile")
                            .setLabel("–û–±—Ä–∞—Ç–Ω–æ –≤ –ø—Ä–æ—Ñ–∏–ª—å")
                            .setStyle(ButtonStyle.Secondary)
                    )]
                    break;
                case "duels":
                    content = "–î—É—ç–ª–∏"
                    component = [new ActionRowBuilder<ButtonBuilder>().addComponents(
                        new ButtonBuilder()
                            .setCustomId("duel_stats")
                            .setEmoji("üìä")
                            .setLabel("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
                            .setStyle(ButtonStyle.Secondary),
                        new ButtonBuilder()
                            .setCustomId("duel_toggleSwitch")
                            .setEmoji("‚èØ")
                            .setLabel("–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã")
                            .setStyle(ButtonStyle.Success),
                        new ButtonBuilder()
                            .setCustomId("backProfile")
                            .setLabel("–û–±—Ä–∞—Ç–Ω–æ –≤ –ø—Ä–æ—Ñ–∏–ª—å")
                            .setStyle(ButtonStyle.Secondary)
                    )]
                    break;
            }
            await interaction.update({
                content: content,
                components: component,
                files: [],
            })
        }],
        ["duel", async (interaction) => {
            const [, type] = interaction.customId.split("_")
            switch (type) {
                case "stats":
                    await interaction.reply({ content: "–ò–¥–µ—Ç –ø–æ–∏—Å–∫" })
                    break;

                default:
                    break;
            }
        }]
    ]),
})